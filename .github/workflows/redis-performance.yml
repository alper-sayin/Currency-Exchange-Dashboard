name: Redis Performance Test

on:
  workflow_dispatch:

jobs:
  performance-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DB_PASSWORD=simple" > .env

      - name: Start Docker services
        run: |
          docker compose up -d --build
          docker compose ps -a

      - name: Wait for services
        run: |
          docker compose exec -T web python manage.py check --database default
          docker compose exec -T web python -c "import redis;redis.Redis(host='redis').ping()"
          for i in {1..3}; do
            if docker compose exec -T web python manage.py shell -c \
              "from exchange.models import ExchangeRate; exit(1) if not ExchangeRate.objects.exists() else exit(0)";
            then
              echo "✅ Database seeded successfully"
              exit 0
            fi
            echo "⏳ Waiting for database seeding (attempt $i/3)..."
            sleep 10
          done
          echo "❌ Database seeding failed after 3 attempts"
          exit 1

      - name: Run performance test
        run: |
          docker compose exec -T web python manage.py redis_performance_real_data | tee performance.log
          echo "PERF_RESULTS<<EOF" >> $GITHUB_ENV
          cat performance.log >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          cat performance.log >> $GITHUB_STEP_SUMMARY

      - name: Archive results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: performance.log

      - name: Display Docker logs
        if: always()
        run: docker compose logs

      - name: Cleanup
        if: always()
        run: docker compose down
